plugins {
	id 'java'
	id 'org.springframework.boot' version '2.7.12'
	id 'io.spring.dependency-management' version '1.0.15.RELEASE'
	id "com.netflix.dgs.codegen" version "5.9.0"
}

group = 'com.github.mrvaruntandon'
version = '0.0.1-SNAPSHOT'
sourceCompatibility = '1.8'

repositories {
	mavenCentral()
}

dependencyManagement {
	// This application is on Spring Boot 2.7,
	// you will need to use the 5.5.x release train of the DGS framework.
	imports {
		mavenBom 'com.netflix.graphql.dgs:graphql-dgs-platform-dependencies:5.5.1'
	}
}

dependencies {
	implementation 'org.springframework.boot:spring-boot-starter-web'
	testImplementation 'org.springframework.boot:spring-boot-starter-test'

	implementation 'org.springframework.boot:spring-boot-starter-data-jpa'
	implementation 'com.h2database:h2'

	compileOnly 'org.projectlombok:lombok'
	annotationProcessor 'org.projectlombok:lombok'

	implementation "com.netflix.graphql.dgs:graphql-dgs-spring-boot-starter"
	implementation 'com.graphql-java:graphql-java-extended-scalars'
}

tasks.named('test') {
	useJUnitPlatform()
}

generateJava{
	schemaPaths = ["${projectDir}/src/main/resources/schema"] // List of directories containing schema files
	packageName = 'com.github.mrvaruntandon.learningdgs.generated' // The package name to use to generate sources
	generateClientv2 = true // Enable generating the type safe query API
}